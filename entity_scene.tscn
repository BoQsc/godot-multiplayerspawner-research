[gd_scene load_steps=4 format=3 uid="uid://dub7iv64uw2iq"]

[sub_resource type="GDScript" id="GDScript_qggms"]
resource_name = "entity_Scene"
script/source = "# Method 1: Simple position-based movement
#entity_scene node
extends Node2D

func _enter_tree():
	# Set authority BEFORE _ready() - this is critical for MultiplayerSynchronizer
	var player_id = int(name)
	set_multiplayer_authority(player_id)
	
	# Also set the MultiplayerSynchronizer authority
	var sync = $MultiplayerSynchronizer
	if sync:
		sync.set_multiplayer_authority(player_id)



@export var speed = 300.0

func _physics_process(delta: float) -> void:
	if is_multiplayer_authority():
		var velocity = Vector2.ZERO
		
		# Check for input
		if Input.is_action_pressed(\"ui_right\"):
			velocity.x += 1
		if Input.is_action_pressed(\"ui_left\"):
			velocity.x -= 1
		if Input.is_action_pressed(\"ui_down\"):
			velocity.y += 1
		if Input.is_action_pressed(\"ui_up\"):
			velocity.y -= 1
	
		# Normalize diagonal movement
		if velocity.length() > 0:
			velocity = velocity.normalized() * speed
			position += velocity * delta
"

[sub_resource type="PlaceholderTexture2D" id="PlaceholderTexture2D_qsx0g"]
size = Vector2(50, 50)

[sub_resource type="SceneReplicationConfig" id="SceneReplicationConfig_qsx0g"]
properties/0/path = NodePath(".:position")
properties/0/spawn = true
properties/0/replication_mode = 1

[node name="entity_scene" type="Node2D"]
script = SubResource("GDScript_qggms")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = SubResource("PlaceholderTexture2D_qsx0g")

[node name="MultiplayerSynchronizer" type="MultiplayerSynchronizer" parent="."]
replication_interval = 0.1
delta_interval = 0.1
replication_config = SubResource("SceneReplicationConfig_qsx0g")
