[gd_scene load_steps=3 format=3 uid="uid://dub7iv64uw2iq"]

[sub_resource type="GDScript" id="GDScript_qggms"]
resource_name = "entity_Scene"
script/source = "extends Node2D

@export var speed = 300.0
var player_id: int
var is_local_player: bool = false
var game_manager: Node

func _ready():
	player_id = int(name)
	is_local_player = (player_id == multiplayer.get_unique_id())
	# Cache reference to game manager
	game_manager = get_tree().get_first_node_in_group(\"game_manager\")
	if not game_manager:
		game_manager = get_parent().get_parent().get_node(\"GameManager\")

func _physics_process(delta: float) -> void:
	# Only handle input for local player
	if is_local_player:
		var input_vector = Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
		
		if input_vector != Vector2.ZERO:
			var velocity = input_vector * speed
			position += velocity * delta
			
			# Send position update to all other peers
			game_manager.rpc(\"update_player_position\", player_id, position)
"

[sub_resource type="PlaceholderTexture2D" id="PlaceholderTexture2D_qsx0g"]
size = Vector2(50, 50)

[node name="entity_scene" type="Node2D"]
script = SubResource("GDScript_qggms")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = SubResource("PlaceholderTexture2D_qsx0g")
