<<<<<<< Updated upstream
[gd_scene load_steps=5 format=3 uid="uid://dslh1c7rihy52"]
=======
[gd_scene load_steps=4 format=3 uid="uid://dslh1c7rihy52"]
>>>>>>> Stashed changes

[ext_resource type="Texture2D" uid="uid://bxoyje2pq7nna" path="res://icon.svg" id="1_0f027"]
[ext_resource type="Script" uid="uid://dyanuw3ckhq8o" path="res://network_manager.gd" id="1_2c62f"]

[sub_resource type="GDScript" id="GDScript_2c62f"]
resource_name = "Multiplayer"
script/source = "extends Node 

<<<<<<< Updated upstream
const PORT=4443
=======
const PORT = 4443
var players = {}
var network_manager: NetworkManager
>>>>>>> Stashed changes

func _ready() -> void:
	# Find NetworkManager
	network_manager = get_tree().get_first_node_in_group(\"network_manager\")
	
	if \"--server\" in OS.get_cmdline_args():
		print(\"Creating server\")
		var peer = ENetMultiplayerPeer.new()
		peer.create_server(PORT)
		multiplayer.multiplayer_peer = peer
		
		await get_tree().process_frame 
		var player = load(\"res://entity_scene.tscn\").instantiate()
		player.name = str(1)
		player.position = Vector2(0, 0)
		player.get_node(\"ColorRect\").color = Color.GREEN
		$\"../SpawnContainer\".add_child(player)
			
		multiplayer.peer_connected.connect(_on_player_connected)
		multiplayer.peer_disconnected.connect(_on_player_disconnected)
	else:
		print(\"Creating Client\")
		var peer = ENetMultiplayerPeer.new()
		peer.create_client(\"127.0.0.1\", PORT)
		multiplayer.multiplayer_peer = peer

func _on_player_connected(id):
	print(\"Player connected: \", id)
	if multiplayer.is_server():
		var player = load(\"res://entity_scene.tscn\").instantiate()
		player.name = str(id)
		player.get_node(\"ColorRect\").color = Color(randf(),randf(),randf())
		$\"../SpawnContainer\".add_child(player)
		
func _on_player_disconnected(id):
	print(\"Player disconnected: \", id)
	if multiplayer.is_server():
<<<<<<< Updated upstream
		var player = $\"../SpawnContainer\".get_node_or_null(str(id))  
		if player:
			player.queue_free()
=======
		_despawn_player(id)
		rpc(\"despawn_player\", id)

func _spawn_player(id: int, pos: Vector2):
	var player = load(\"res://entity_scene.tscn\").instantiate()
	player.name = str(id)
	player.position = pos
	player.player_id = id
	get_parent().get_node(\"SpawnContainer\").add_child(player)
	players[id] = player

func _despawn_player(id: int):
	if id in players:
		players[id].queue_free()
		players.erase(id)

@rpc(\"any_peer\", \"call_local\", \"reliable\")
func spawn_player(id: int, pos: Vector2):
	if not multiplayer.is_server():
		_spawn_player(id, pos)

@rpc(\"any_peer\", \"call_local\", \"reliable\") 
func despawn_player(id: int):
	if not multiplayer.is_server():
		_despawn_player(id)

@rpc(\"any_peer\", \"call_remote\", \"unreliable\")
func update_player_position(id: int, pos: Vector2):
	# Forward position update to NetworkManager for handling
	if network_manager:
		network_manager.receive_remote_position(id, pos)
	else:
		# Fallback: direct position update if no NetworkManager
		if id in players:
			players[id].position = pos
>>>>>>> Stashed changes
"

[sub_resource type="GDScript" id="GDScript_0f027"]
resource_name = "MultiplayerSpawner"
script/source = "extends MultiplayerSpawner


# Called when the node enters the scene tree for the first time.
#func _ready() -> void:
#	
#	for i in range(get_spawnable_scene_count()):
#		#load(get_spawnable_scene(i)).instantiate()
#		print(get_spawnable_scene(i))
#
#	pass # Replace with function body.
"

[sub_resource type="LabelSettings" id="LabelSettings_0f027"]
font_size = 14
font_color = Color(0, 1, 1, 1)
shadow_color = Color(0, 0, 0, 1)

[node name="Node2D" type="Node2D"]

<<<<<<< Updated upstream
[node name="Multiplayer" type="Node" parent="."]
=======
[node name="NetworkManager" type="Node" parent="."]
script = ExtResource("1_2c62f")

[node name="GameManager" type="Node" parent="."]
>>>>>>> Stashed changes
script = SubResource("GDScript_2c62f")

[node name="MultiplayerSpawner" type="MultiplayerSpawner" parent="."]
_spawnable_scenes = PackedStringArray("uid://dub7iv64uw2iq")
spawn_path = NodePath("../SpawnContainer")
script = SubResource("GDScript_0f027")

[node name="SpawnContainer" type="Node2D" parent="."]
position = Vector2(171, 173)

[node name="Sprite2D" type="Sprite2D" parent="SpawnContainer"]
texture = ExtResource("1_0f027")

[node name="Label" type="Label" parent="SpawnContainer"]
offset_left = -55.0
offset_top = -64.0
offset_right = 73.0
offset_bottom = -41.0
text = "SpawnContainer"
label_settings = SubResource("LabelSettings_0f027")
