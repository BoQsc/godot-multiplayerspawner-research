[gd_scene load_steps=9 format=4 uid="uid://dslh1c7rihy52"]

[ext_resource type="Texture2D" uid="uid://bxoyje2pq7nna" path="res://icon.svg" id="1_0f027"]
[ext_resource type="Script" uid="uid://dyanuw3ckhq8o" path="res://network_manager.gd" id="1_2c62f"]
[ext_resource type="Resource" path="user://world_data.tres" id="3_8mm7a"]
[ext_resource type="Texture2D" uid="uid://bbkxfau70a8fc" path="res://kenney_voxel-pack/Spritesheets/spritesheet_tiles.png" id="3_d5x1h"]
[ext_resource type="Script" uid="uid://plwytekgsub" path="res://world_manager.gd" id="3_world"]

[sub_resource type="GDScript" id="GDScript_2c62f"]
resource_name = "GameManager"
script/source = "extends Node 

const PORT = 4443
var players = {}
var network_manager: NetworkManager

func _ready() -> void:
	# Find NetworkManager
	network_manager = get_tree().get_first_node_in_group(\"network_manager\")
	
	if \"--server\" in OS.get_cmdline_args():
		print(\"Creating server\")
		var peer = ENetMultiplayerPeer.new()
		peer.create_server(PORT)
		multiplayer.multiplayer_peer = peer
		
		multiplayer.peer_connected.connect(_on_player_connected)
		multiplayer.peer_disconnected.connect(_on_player_disconnected)
		
		# Spawn server player (ID 1)
		await get_tree().process_frame
		_spawn_player(1, Vector2(100, 100))
	else:
		print(\"Creating Client\")
		var peer = ENetMultiplayerPeer.new()
		peer.create_client(\"127.0.0.1\", PORT)
		multiplayer.multiplayer_peer = peer

func _on_player_connected(id):
	print(\"Player connected: \", id)
	if multiplayer.is_server():
		# Send existing players to new player
		for player_id in players.keys():
			rpc_id(id, \"spawn_player\", player_id, players[player_id].position)
		
		# Spawn new player and notify all clients
		var spawn_pos = Vector2(randf_range(50, 500), randf_range(50, 400))
		_spawn_player(id, spawn_pos)
		rpc(\"spawn_player\", id, spawn_pos)
		
func _on_player_disconnected(id):
	print(\"Player disconnected: \", id)
	if multiplayer.is_server():
		_despawn_player(id)
		rpc(\"despawn_player\", id)

func _spawn_player(id: int, pos: Vector2):
	var player = load(\"res://entity_scene.tscn\").instantiate()
	player.name = str(id)
	player.position = pos
	player.player_id = id
	get_parent().get_node(\"SpawnContainer\").add_child(player)
	players[id] = player

func _despawn_player(id: int):
	if id in players:
		players[id].queue_free()
		players.erase(id)

@rpc(\"any_peer\", \"call_local\", \"reliable\")
func spawn_player(id: int, pos: Vector2):
	if not multiplayer.is_server():
		_spawn_player(id, pos)

@rpc(\"any_peer\", \"call_local\", \"reliable\") 
func despawn_player(id: int):
	if not multiplayer.is_server():
		_despawn_player(id)

@rpc(\"any_peer\", \"call_remote\", \"unreliable\")
func update_player_position(id: int, pos: Vector2):
	# Forward position update to NetworkManager for handling
	if network_manager:
		network_manager.receive_remote_position(id, pos)
	else:
		# Fallback: direct position update if no NetworkManager
		if id in players:
			players[id].position = pos

@rpc(\"any_peer\", \"call_remote\", \"reliable\")
func request_terrain_modification(coords: Vector2i, source_id: int, atlas_coords: Vector2i, alternative_tile: int):
	# Server receives terrain modification request from client
	if multiplayer.is_server():
		var world_manager = get_tree().get_first_node_in_group(\"world_manager\")
		if world_manager:
			world_manager.modify_terrain(coords, source_id, atlas_coords, alternative_tile)

@rpc(\"authority\", \"call_local\", \"reliable\")
func sync_terrain_modification(coords: Vector2i, source_id: int, atlas_coords: Vector2i, alternative_tile: int):
	var world_manager = get_tree().get_first_node_in_group(\"world_manager\")
	if world_manager:
		world_manager.sync_terrain_modification(coords, source_id, atlas_coords, alternative_tile)
"

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_8mm7a"]
texture = ExtResource("3_d5x1h")
texture_region_size = Vector2i(128, 128)
0:0/0 = 0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
0:1/0 = 0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
0:2/0 = 0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
0:3/0 = 0
0:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
0:4/0 = 0
0:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
0:5/0 = 0
0:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
0:6/0 = 0
0:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
0:7/0 = 0
0:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
0:8/0 = 0
0:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
0:9/0 = 0
0:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
1:9/0 = 0
1:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
1:8/0 = 0
1:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
2:8/0 = 0
2:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
1:7/0 = 0
1:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
1:6/0 = 0
1:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
1:5/0 = 0
1:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
1:4/0 = 0
1:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
1:3/0 = 0
1:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
1:2/0 = 0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
2:2/0 = 0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
2:1/0 = 0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
2:0/0 = 0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
1:0/0 = 0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
3:0/0 = 0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
3:1/0 = 0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
2:3/0 = 0
2:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
3:3/0 = 0
3:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
3:4/0 = 0
3:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
4:4/0 = 0
4:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
4:5/0 = 0
4:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
5:6/0 = 0
5:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
4:6/0 = 0
4:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
4:7/0 = 0
4:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
3:7/0 = 0
3:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
3:8/0 = 0
3:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
2:7/0 = 0
2:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
2:6/0 = 0
2:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
2:9/0 = 0
2:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
2:5/0 = 0
2:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
2:4/0 = 0
2:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
3:6/0 = 0
3:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
4:8/0 = 0
4:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
4:9/0 = 0
4:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
3:9/0 = 0
3:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
4:3/0 = 0
4:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
4:2/0 = 0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
4:1/0 = 0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
5:1/0 = 0
5:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
4:0/0 = 0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
5:0/0 = 0
5:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
6:0/0 = 0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
7:0/0 = 0
7:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
7:1/0 = 0
7:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
6:1/0 = 0
6:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
6:2/0 = 0
6:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
6:3/0 = 0
6:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
6:4/0 = 0
6:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
6:5/0 = 0
6:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
6:6/0 = 0
6:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
6:7/0 = 0
6:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
6:8/0 = 0
6:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
6:9/0 = 0
6:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
7:9/0 = 0
7:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
7:8/0 = 0
7:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
7:7/0 = 0
7:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
7:6/0 = 0
7:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
7:5/0 = 0
7:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
7:4/0 = 0
7:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
7:3/0 = 0
7:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
7:2/0 = 0
7:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
8:0/0 = 0
8:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
8:1/0 = 0
8:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
8:2/0 = 0
8:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
8:3/0 = 0
8:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
8:4/0 = 0
8:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
8:5/0 = 0
8:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
8:6/0 = 0
8:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
8:7/0 = 0
8:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
8:8/0 = 0
8:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)
8:9/0 = 0
8:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-64, -64, 64, -64, 64, 64, -64, 64)

[sub_resource type="TileSet" id="TileSet_hq1ik"]
tile_size = Vector2i(128, 128)
physics_layer_0/collision_layer = 1
sources/1 = SubResource("TileSetAtlasSource_8mm7a")

[node name="Node2D" type="Node2D"]

[node name="NetworkManager" type="Node" parent="."]
script = ExtResource("1_2c62f")

[node name="GameManager" type="Node" parent="." groups=["game_manager"]]
script = SubResource("GDScript_2c62f")

[node name="WorldManager" type="Node2D" parent="." node_paths=PackedStringArray("world_tile_map_layer") groups=["world_manager"]]
script = ExtResource("3_world")
world_tile_map_layer = NodePath("WorldTileMapLayer")
world_data = ExtResource("3_8mm7a")

[node name="WorldTileMapLayer" type="TileMapLayer" parent="WorldManager"]
tile_map_data = PackedByteArray("AAAAAAQAAQAHAAQAAAAAAAYAAQAHAAQAAAAAAAcAAQAHAAQAAAAAAAgAAQAHAAQAAAABAAQAAQAHAAQAAAABAAYAAQAHAAQAAAABAAcAAQAHAAQAAAABAAgAAQAHAAQAAAACAAQAAQAAAAAAAAACAAYAAQAHAAQAAAACAAcAAQAHAAQAAAACAAgAAQAHAAQAAAADAAQAAQAHAAQAAAADAAYAAQAHAAQAAAADAAcAAQAHAAQAAAADAAgAAQAHAAQAAAAEAAQAAQAAAAAAAAAEAAYAAQAHAAQAAAAEAAcAAQAHAAQAAAAEAAgAAQAHAAQAAAAFAAQAAQAHAAQAAAAFAAYAAQAHAAQAAAAFAAcAAQAHAAQAAAAFAAgAAQAHAAQAAAAGAAQAAQAHAAQAAAAGAAYAAQAHAAQAAAAGAAcAAQAHAAQAAAAGAAgAAQAHAAQAAAAHAAQAAQAHAAQAAAAHAAYAAQAHAAQAAAAHAAcAAQAHAAQAAAAHAAgAAQAHAAQAAAAEAAAAAQAAAAAAAAAFAAAAAQAAAAAAAAAGAAAAAQAAAAAAAAAGAAEAAQAAAAAAAAAGAAIAAQAAAAAAAAAGAAMAAQAAAAAAAAA=")
tile_set = SubResource("TileSet_hq1ik")
rendering_quadrant_size = 128

[node name="SpawnContainer" type="Node2D" parent="."]
position = Vector2(171, 173)

[node name="Sprite2D" type="Sprite2D" parent="SpawnContainer"]
texture = ExtResource("1_0f027")
