[gd_scene load_steps=4 format=3 uid="uid://dslh1c7rihy52"]

[ext_resource type="Texture2D" uid="uid://bxoyje2pq7nna" path="res://icon.svg" id="1_0f027"]
[ext_resource type="PackedScene" uid="uid://dub7iv64uw2iq" path="res://entity_scene.tscn" id="2_2c62f"]

[sub_resource type="GDScript" id="GDScript_2c62f"]
resource_name = "Multiplayer"
script/source = "# MULTIPLAYER MANAGER (main_scene.tscn script)
extends Node 

const PORT = 4443
var available_players = []
var player_assignments = {}

func _ready() -> void:
	# Initialize available players - keep original names but disable them
	for i in range(1, 5):
		var node = $\"../SpawnContainer\".get_node_or_null(str(i))
		if node:
			available_players.append(node)
			node.visible = false
			# Don't set authority here - let entity handle it
	
	if \"--server\" in OS.get_cmdline_args():
		print(\"Creating server\")
		var peer = ENetMultiplayerPeer.new()
		peer.create_server(PORT)
		multiplayer.multiplayer_peer = peer
		
		await get_tree().process_frame
		
		# Assign first player node to server (peer ID 1)
		if available_players.size() > 0:
			var server_player = available_players.pop_front()
			server_player.assign_to_peer(1)  # Server is always peer ID 1
			server_player.position = Vector2(100, 100)
			server_player.visible = true
			player_assignments[1] = server_player
			print(\"Server assigned to player node\")
			
		multiplayer.peer_connected.connect(_on_player_connected)
		multiplayer.peer_disconnected.connect(_on_player_disconnected)
	else:
		print(\"Creating Client\")
		var peer = ENetMultiplayerPeer.new()
		peer.create_client(\"127.0.0.1\", PORT)
		multiplayer.multiplayer_peer = peer

func _on_player_connected(id):
	print(\"Player connected: \", id)
	if multiplayer.is_server():
		if available_players.size() > 0:
			var player = available_players.pop_front()
			player.assign_to_peer(id)
			player.visible = true
			player_assignments[id] = player
			print(\"Assigned player node to peer \", id)
		else:
			print(\"No available player nodes for peer \", id)
		
func _on_player_disconnected(id):
	print(\"Player disconnected: \", id)
	if multiplayer.is_server():
		if id in player_assignments:
			var player = player_assignments[id]
			player.visible = false
			player.reset_peer()  # Reset to unassigned state
			available_players.append(player)
			player_assignments.erase(id)
			print(\"Released player node from peer \", id)

"

[node name="Node2D" type="Node2D"]

[node name="Multiplayer" type="Node" parent="."]
script = SubResource("GDScript_2c62f")

[node name="MultiplayerSpawner" type="MultiplayerSpawner" parent="."]
_spawnable_scenes = PackedStringArray("uid://dub7iv64uw2iq")
spawn_path = NodePath("../SpawnContainer")

[node name="SpawnContainer" type="Node2D" parent="."]
position = Vector2(171, 173)

[node name="Sprite2D" type="Sprite2D" parent="SpawnContainer"]
texture = ExtResource("1_0f027")

[node name="1" parent="SpawnContainer" instance=ExtResource("2_2c62f")]

[node name="2" parent="SpawnContainer" instance=ExtResource("2_2c62f")]

[node name="3" parent="SpawnContainer" instance=ExtResource("2_2c62f")]

[node name="4" parent="SpawnContainer" instance=ExtResource("2_2c62f")]
